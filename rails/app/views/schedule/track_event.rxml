event = @events.select{|e| e.event_id == @event.event_id}.first
xml.div(:id=>'event',:class=>'section') do

  xml << render(:partial=>'event_infobox')

  xml.h1(@event.title,{:class=>'title'})
  xml.p(@event.subtitle,{:class=>'subtitle'})
  xml.img(:class=>'event-image',:src=>event_image(@event.event_id, 128))
  xml.div({:class=>'abstract'}) do
    xml << markup(@event.abstract)
  end
  xml.div({:class=>'description'}) do
    xml << markup(@event.description)
  end

  files = View_event_attachment.select({:event_id=>@event.event_id,:translated=>@current_language,:public=>'t'})
  if files.length > 0
    xml.div(:class=>'attachments') do
      xml.h2( local( 'schedule::attachments' ) )
      xml.ul do
        files.each do | file |
          xml.li do
            xml.a("#{file.title} (#{file.mime_type} - #{number_to_human_size(file.filesize)})",{:href=>url_for(:controller=>'file',:action=>:event_attachment,:id=>file.event_attachment_id,:filename=>file.filename),:rel=>'enclosure'})
          end
        end
      end
    end
  end

  links = Event_link.select({:event_id=>@event.event_id})
  if links.length > 0
    xml.div(:class=>'links') do
      xml.h2('Links')
      xml.ul do
        links.each do | link |
          xml.li do
            xml.a( link.title ? link.title : link.url, {:href=>link.url})
          end
        end
      end
    end
  end

  xml.div(:id=>'navigation') do
    prev = nil
    @events.each do | e |
      break if e.event_id == event.event_id
      prev = e
    end

    if prev
      xml.a(:href=>url_for(:action=>:track_event,:conference=>@conference.acronym,:track=>@track.conference_track,:id=>prev.event_id,:language=>@current_language)) do
        xml.span('<<<',{:class=>'previous',:title=>prev.title})
      end
    end

    fwd = nil
    @events.reverse_each do | e |
      break if e.event_id == event.event_id
      fwd = e
    end

    if fwd
      xml.a(:href=>url_for(:action=>:track_event,:conference=>@conference.acronym,:track=>@track.conference_track,:id=>fwd.event_id,:language=>@current_language)) do
        xml.span('>>>',{:class=>'next',:title=>fwd.title})
      end
    end
  end

end
