xml.div({:id=>:data}) do
  xml << js_tabs([:simple,:advanced])

  xml.fieldset(:id=>'content-simple') do
    xml.label(local('pentabarf::find_person'))
    xml.form(:id=>:simple_search,:action=>url_for) do
      xml.input({:type=>:text,:name=>:search_person_simple,:id=>:search_person_simple,:value=>@preferences[:search_person_simple]})
      xml.label("Searching ...", {:id=>"search-indicator",:style=>"display:none"})
    end
  end

  categories = [
    [:all_names,local('person::name'),:text],
    [:email,local('person::email'),:text],
    [:gender,local('person::gender'),:list, [[nil,'unknown'],['t','male'],['f','female']] ],
    [:event_role,local('event_role'),:list, Event_role_localized.select({:translated=>@current_language}).map{|c| [c.event_role, c.name]} ],
    [:role,local('role'),:list, Role_localized.select({:translated=>@current_language}).map{|c| [c.role, c.name]} ],
    [:conference_id,local('conference'),:list, Conference.select.map{|c| [c.conference_id, c.acronym]} ],
    [:country,local('person::country'),:list, Country_localized.select({:translated=>@current_language},{:order=>:name}).map{|c| [c.country, c.name]} ],
    [:arrived,local('conference_person::arrived'),:list, [['t','Yes'],['f','No']] ],
    [:reconfirmed,local('conference_person::reconfirmed'),:list, [['t','Yes'],['f','No']] ]
  ]

  xml.fieldset(:id=>'content-advanced') do
    xml.label(local('pentabarf::find_person'))

    # template used for constructing advanced search rows
    xml.ul({:id=>:search_content,:style=>"display:none"}) do

      categories.each do | category |
        xml.li({:class=>category[0],:title=>category[1]}) do
          xml.input({:type=>:hidden,:name=>'search_person[row_id][key]',:value=>category[0]})
          xml.input({:type=>:hidden,:name=>'search_person[row_id][type]',:value=>category[2]})
          case category[2]
            when :text 
              xml.input({:type=>:text,:name=>'search_person[row_id][value]'})
            when :list
              xml << select_tag('search_person[row_id][value]', category[3], category[4] || {} )
            else
              raise "Unknown search type"
          end
        end
      end

    end

    xml.ul({:id=>:search_template,:style=>"display:none"}) do
      xml.li do
        xml.img({:onclick=>'search_row_add(this)',:src=>'/images/icon-plus-16x16.png'})
        xml.img({:onclick=>'search_row_remove(this)',:src=>'/images/icon-minus-16x16.png'})
        xml.select(nil,{:onchange=>'search_row_change(this)'})
        xml.span(nil,:class=>:dynamic)
      end
    end

    xml.form(:id=>:advanced_search,:action=>url_for) do
      xml.ul( nil, {:id=>:advanced_search_list,:class=>"advanced_search"} )
      xml.label("Searching ...", {:id=>"search-indicator",:style=>"display:none"})
    end

  end

  xml.fieldset do
    xml.div({:id=>:results})
  end

end

xml.script(:type=>'text/javascript') do
  xml.text! "init_search_list('advanced_search_list');"
  if @preferences[:search_person_advanced] && @preferences[:search_person_advanced].length > 0
    @preferences[:search_person_advanced].each do | key, row |
      xml << js_function('search_row_add', nil, row[:key], row[:value])
    end
  else
    xml << "search_row_add();"
  end
  xml.text! <<-JS
    switch_tab();
    new Form.Observer('advanced_search', 1, function(element, value) { new Ajax.Updater('results', '#{url_for(:action=>:search_person_advanced)}', { asynchronous:true, evalScripts:false, onComplete:function(request){Element.hide('search-indicator');sortables_init()}, onLoading:function(request){Element.show('search-indicator')}, parameters:value });});
    new Form.Observer('simple_search', 1, function(element, value) { new Ajax.Updater('results', '#{url_for(:action=>:search_person_simple)}', { asynchronous:true, evalScripts:false, onComplete:function(request){Element.hide('search-indicator');sortables_init()}, onLoading:function(request){Element.show('search-indicator')}, parameters:value });});
    if ( $('content-simple').visible() )
      new Ajax.Updater('results', '#{url_for(:action=>:search_person_simple)}', { asynchronous:true, evalScripts:false, onComplete:function(request){Element.hide('search-indicator');sortables_init()}, onLoading:function(request){Element.show('search-indicator')},parameters:$('simple_search').serialize()});
    else
      new Ajax.Updater('results', '#{url_for(:action=>:search_person_advanced)}', { asynchronous:true, evalScripts:false, onComplete:function(request){Element.hide('search-indicator');sortables_init()}, onLoading:function(request){Element.show('search-indicator')},parameters:$('advanced_search').serialize()});

JS
end
