#!/usr/bin/env ruby

require 'rubygems'
require 'yaml'
require 'xmpp4r'
require 'socket'
require 'rexml/document'
require 'daemons'

workdir = Dir.pwd

Daemons.run_proc( 'jabber_notification', { :script => workdir, :dir_mode => :normal } ) do
  config = YAML::load_file( File.join( workdir, 'config', 'jabber.yml' ) )
  #Jabber::debug = true

  client = Jabber::Client.new( Jabber::JID.new( config['daemon']['jid']))
  client.connect(config['daemon']['server'], config['daemon']['port'])
  client.auth(config['daemon']['password'])

  client.send(Jabber::Presence.new( nil, 'Pentabarf' ) )

  client.add_message_callback { |msg|
    reply = Jabber::XMLStanza.answer(msg, false)
    reply.type = msg.type
    #puts "Message from #{msg.from}: #{msg.body}"
    reply.set_body("All answers shall be shallow")
    client.send(reply)
  }

  trap( "TERM" ) do File.unlink( config['daemon']['socket_path'] ) end

  sock = UNIXServer.open( config['daemon']['socket_path'] )
  while unixclient = sock.accept
    text = ""
    received = false
    while !received
      text += unixclient.recvfrom(1024).shift
      begin
        stanza = Jabber::Message.new.import(REXML::Document.new(text).root)
        received = true if text =~ /<\/message>$/
      rescue Exception => e
        #puts e
      end
    end
    #puts text
    client.send(stanza)
    unixclient.close
  end
end


