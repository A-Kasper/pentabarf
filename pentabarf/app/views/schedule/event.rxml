xml = Builder::XmlMarkup.new(:indent=>1)
xml.div(:id=>'event',:class=>'section') do
  xml.div(:id=>'infobox') do
    xml.table do
      xml.tr do
        xml.th('<[schedule::speakers]>',{:colspan=>'2'})
      end
      @events.each_by_value({:event_id=>@event.event_id}) do | speaker |
        xml.tr do 
          xml.td do
            xml.a(:href=>url_for(:action=>:speaker,:id=>speaker.person_id)) do
              xml.img(:src=>person_image( speaker.person_id, 32))
            end
          end
          xml.td do
            xml.a(speaker.name,{:href=>url_for(:action=>:speaker,:id=>speaker.person_id)})
          end
        end
      end
    end

    xml.table do
      xml.tr do
        xml.th('<[schedule::schedule]>',{:colspan=>2})
      end
      xml.tr do
        xml.td('<[schedule::day]>',{:class=>'keyword'})
        xml.td(@event.day,{:class=>'value'})
      end
      xml.tr do
        xml.td('<[schedule::room]>',{:class=>'keyword'})
        xml.td(@event.room,{:class=>'value'})
      end
      xml.tr do
        xml.td('<[schedule::start_time]>',{:class=>'keyword'})
        xml.td(@event.real_starttime.strftime('%H:%M'),{:class=>'value'})
      end
      xml.tr do
        xml.td('<[schedule::event_duration]>',{:class=>'keyword'})
        xml.td(@event.duration.strftime('%H:%M'),{:class=>'value'})
      end
      xml.tr do
        xml.th('Info',{:colspan=>2})
      end
      @events.find_by_value(:event_id=>@event.event_id)
      xml.tr do
        xml.td('ID',{:class=>'keyword'})
        xml.td(@event.event_id,{:class=>'value'})
      end
      xml.tr do
        xml.td('<[schedule::event_type]>',{:class=>'keyword'})
        xml.td(@events.event_type,{:class=>'value'})
      end
      xml.tr do
        xml.td('<[schedule::conference_track]>',{:class=>'keyword'})
        xml.td(@events.conference_track,{:class=>'value'})
      end
      xml.tr do
        xml.td('<[schedule::language]>',{:class=>'keyword'})
        xml.td(@events.language,{:class=>'value'})
      end
    end
    
    if @conference.f_feedback_enabled && @conference.feedback_base_url
      xml.table do
        xml.tr do
          xml.th('Feedback',{:colspan=>2})
        end
        xml.tr do
          xml.td(:colspan=>2,:class=>'feedback') do
            xml.text! '<[schedule::did_you_attend_this_event]>'
            xml.br
            xml.a('<[schedule::give_feedback]>',{:href=>url_for(:controller=>'feedback',:action=>:event,:id=>@event.event_id)})
          end
        end

      end
    end

  end

  xml.h1(@event.title,{:class=>'title'})
  xml.p(@event.subtitle,{:class=>'subtitle'})
  xml.img(:class=>'event-image',:src=>event_image(@event.event_id, 128))
  xml.div({:class=>'abstract'}) do
    xml << markup(@event.abstract)
  end
  xml.div({:class=>'description'}) do
    xml << markup(@event.description)
  end
  
  files = Momomoto::View_event_attachment.find({:event_id=>@event.event_id,:language_id=>120,:f_public=>'t'})
  if files.length > 0
    xml.div(:class=>'attachments') do
      xml.h2('<[schedule::attachments]>')
      xml.ul do
        files.each do | file |
          xml.li do
            xml.a("#{file.title} (#{human_size(file.filesize)})",{:href=>url_for(:controller=>'file',:action=>:event_attachment,:id=>file.event_attachment_id)})
          end
        end
      end
    end
  end

  links = Momomoto::Event_link.find({:event_id=>@event.event_id})
  if links.length > 0
    xml.div(:class=>'links') do
      xml.ul do
        links.each do | link |
          xml.li do
            xml.a( link.title ? link.title : link.url, {:href=>link.url})
          end
        end
      end
    end
  end

  xml.div(:id=>'navigation') do
    @events.find_by_value({:event_id=>@event.event_id})
    while @events.current_record > 0 && @events[@events.current_record - 1] do 
      break if @events.event_id != @event.event_id 
    end
    if @events.event_id != @event.event_id
      xml.a(:href=>url_for(:action=>:event,:id=>@events.event_id)) do
        xml.span('<<<',{:class=>'previous',:title=>@events.title})
      end
    end
    @events.find_by_value({:event_id=>@event.event_id})
    while @events.current_record + 1 < @events.length && @events[@events.current_record + 1] do 
      break if @events.event_id != @event.event_id 
    end
    if @events.event_id != @event.event_id
      xml.a(:href=>url_for(:action=>:event,:id=>@events.event_id)) do
        xml.span('>>>',{:class=>'next',:title=>@events.title})
      end
    end
  end
  
end
