x = Builder::XmlMarkup.new(:indent=>2)

@toc << 'Schedule'
@toc << ''
@toc << (toc_schedules = [])

big_table = schedule_table( @conference, @events )
x.flow(:flow_name=>'xsl-region-body', :id=>'schedule') {
  @conference.days.times { | day |
   table = big_table[ day ]
   next if table.size < 1

     toc_schedules << "<[schedule::schedule]> <[schedule::day]> #{day + 1}"
     toc_schedules << "scheduletable-day-#{day + 1}"

     x.block({ :font_size=>'24pt',
             :font_weight=>'bold',
             :text_align=>'center',
             :id=>"scheduletable-day-#{day + 1}"
     }, "<[schedule::schedule]> <[schedule::day]> #{day + 1}")

     x.table(:width=>'100%', :table_layout=>'fixed', :border_collapse=>'collapse', :border_spacing=>'2pt', :padding_bottom=>'24pt') {

       x.table_column(:column_width=>@column_width_time)
       @rooms.each {
         x.table_column(:column_width=>@column_width_event)
       }

       table_head = lambda {
         x.table_row { 
           x.table_cell {
             x.block
           }
           @rooms.each { | room |
             x.table_cell {
               x.block({:text_align=>'center',:font_weight=>'bold',:font_size=>'10pt'}, room.name)
             }
           }
         }
       }

       x.table_header {
         table_head.call
       }
       x.table_footer {
         table_head.call
       }

       # Foot?

       x.table_body {
         table.each { | row |
           x.table_row {
             x.table_cell {
               x.block({
                 :font_size=>'8pt',
                 :margin_top=>'2pt',
                 :margin_bottom=>'2pt',
                 :margin_left=>'2pt',
                 :margin_right=>'36pt'
               }, row[0])
             }
             @rooms.each { | room |
               if row[room.room_id] == 0
               elsif row[room.room_id].nil?
                 #x.td({:class=>'room empty'}) 
                 x.table_cell {
                   x.block
                 }
               else
                 @events.find_by_value({:event_id =>  row[room.room_id][:event_id] })
                 x.table_cell(
                   :border=>'1pt solid black',
                   :margin_top=>'2pt',
                   :margin_bottom=>'2pt',
                   :margin_left=>'2pt',
                   :margin_right=>'2pt',
                   :number_rows_spanned=>row[room.room_id][:slots]
                             ) {
                   x.block(
                     :font_weight=>'bold',
                     :font_size=>'12pt'
                          ) {
                     x << include_image(:event, row[room.room_id][:event_id])
                     x << @events.title
                   }
                   x.block({
                     :font_style=>'italic',
                     :font_size=>'10pt'
                             }, @events.subtitle)

                   x.list_block(:font_size=>'8pt') {
                     @events.each_by_value({:event_id=>row[room.room_id][:event_id]}) { | speaker |
                       x.list_item {
                         x.list_item_label { x.block }
                         x.list_item_body { x.block(speaker.name) }
                       }
                     }
                   }

                   x.list_block(:font_size=>'8pt') {
                     x.list_item {
                       x.list_item_label { x.block '<[schedule::language]>: ' }
                       x.list_item_body { x.block({:font_weight=>'bold',:margin_top=>'9pt',:margin_left=>'36pt'},@events.language) }
                     }
                     x.list_item {
                       x.list_item_label { x.block '<[schedule::event_type]>: ' }
                       x.list_item_body { x.block({:font_weight=>'bold',:margin_top=>'9pt',:margin_left=>'36pt'},@events.event_type) }
                     }
                     x.list_item {
                       x.list_item_label { x.block '<[schedule::conference_track]>: ' }
                       x.list_item_body { x.block({:font_weight=>'bold',:margin_top=>'9pt',:margin_left=>'36pt'},@events.conference_track) }
                     }
                   }
                 }
               end
             }
           }
         }
       }
     }
   }
}

